// SiGG-GoLang-On-the-Fly //
//go:build !reference
// +build !reference

package config

import (
	"context"
	"crypto/sha1"
	"os"
	"path/filepath"
	"testing"

	"github.com/hyperledger/firefly-common/pkg/config"
	"github.com/hyperledger/firefly/internal/apiserver"
	"github.com/hyperledger/firefly/internal/namespace"
	"github.com/stretchr/testify/assert"
)

func TestConfigDocsUpToDate(t *testing.T) {
	// Initialize config of all plugins
	namespace.NewNamespaceManager(false)
	apiserver.InitConfig()
	generatedConfig, err := config.GenerateConfigMarkdown(context.Background(), configDocHeader, config.GetKnownKeys())
	assert.NoError(t, err)
	configOnDisk, err := os.ReadFile(filepath.Join("reference", "config.md"))
	assert.NoError(t, err)

	generatedConfigHash := sha1.New()
	generatedConfigHash.Write(generatedConfig)
	configOnDiskHash := sha1.New()
	configOnDiskHash.Write(configOnDisk)
	assert.Equal(t, configOnDiskHash.Sum(nil), generatedConfigHash.Sum(nil), "The config reference docs generated by the code did not match the docs/reference/config.md file in git. Did you forget to run `make reference`?")
}

const configDocHeader = `---
layout: default
title: Configuration Reference
parent: pages.reference
nav_order: 2
---

# Configuration Reference
{: .no_toc }

<!-- ## Table of contents
{: .no_toc .text-delta }

1. TOC
{:toc} -->

---
`
